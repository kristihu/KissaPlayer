{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\kissavideo\\\\kissa-sivu\\\\src\\\\Components\\\\SideWidget.js\";\nimport React, { Component } from 'react';\n\nclass SideWidget extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      blobData: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"asd\", this.props);\n    /*  for (let i = 0; i < this.props.video.length; i++) {\r\n          console.log(this.props.video[i].Video);\r\n            fetch('/Media/' + this.props.video[i].Video).then((response) => {\r\n              return response.blob();\r\n          }).then((blob) => {\r\n                console.log(blob);\r\n                let reader = new FileReader();\r\n                  //if reading completed\r\n           //   reader.onload = e => {\r\n           //       let blobData = blob; //blob data\r\n          //        console.log(blobData);\r\n          //    };\r\n              //  this.state.blobData.push()\r\n             //   this.thumbnail(blob);\r\n          });\r\n      }*/\n  }\n\n  thumbnail(videoFromJson) {\n    const canvas = document.getElementById('canvas');\n    const video = document.getElementById(videoFromJson);\n    canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n  }\n\n  render() {\n    return this.props.Videos.map((json, i) => React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, json.Video), React.createElement(\"canvas\", {\n      id: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SideWidget;","map":{"version":3,"sources":["C:\\projects\\kissavideo\\kissa-sivu\\src\\Components\\SideWidget.js"],"names":["React","Component","SideWidget","state","blobData","componentDidMount","console","log","props","thumbnail","videoFromJson","canvas","document","getElementById","video","getContext","drawImage","videoWidth","videoHeight","render","Videos","map","json","i","Video"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BE,KAF+B,GAEvB;AACJC,MAAAA,QAAQ,EAAE;AADN,KAFuB;AAAA;;AAM/BC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,KAAKC,KAAxB;AACF;;;;;;;;;;;;;;;;AAuBD;;AAKLC,EAAAA,SAAS,CAACC,aAAD,EAAgB;AACrB,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,UAAMC,KAAK,GAAGF,QAAQ,CAACC,cAAT,CAAwBH,aAAxB,CAAd;AACAC,IAAAA,MAAM,CAACI,UAAP,CAAkB,IAAlB,EAAwBC,SAAxB,CAAkCF,KAAlC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+CA,KAAK,CAACG,UAArD,EAAiEH,KAAK,CAACI,WAAvE;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKX,KAAL,CAAWY,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,CAAP,KACzB;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADJ,EAEI;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADG,CAAP;AAYH;;AAvDkC;;AA0DnC,eAAetB,UAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SideWidget extends Component {\r\n\r\n    state = {\r\n        blobData: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"asd\", this.props);\r\n      /*  for (let i = 0; i < this.props.video.length; i++) {\r\n            console.log(this.props.video[i].Video);\r\n\r\n            fetch('/Media/' + this.props.video[i].Video).then((response) => {\r\n                return response.blob();\r\n            }).then((blob) => {\r\n\r\n                console.log(blob);\r\n\r\n                let reader = new FileReader();\r\n\r\n\r\n                //if reading completed\r\n             //   reader.onload = e => {\r\n             //       let blobData = blob; //blob data\r\n            //        console.log(blobData);\r\n            //    };\r\n\r\n              //  this.state.blobData.push()\r\n\r\n             //   this.thumbnail(blob);\r\n            });\r\n        }*/\r\n    }\r\n   \r\n\r\n    \r\n\r\nthumbnail(videoFromJson) {\r\n    const canvas = document.getElementById('canvas');\r\n    const video = document.getElementById(videoFromJson);\r\n    canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n}\r\n\r\nrender() {\r\n    return this.props.Videos.map((json, i) => (\r\n        <tr key={i}>\r\n            <td>\r\n                <p>{json.Video}</p>\r\n                <canvas id=\"canvas\"></canvas>\r\n                {/*    <video id={`${json.Video}`} width=\"80%\" controls>\r\n                    <source src={this.props.blobData[i]} />\r\n                    Your browser does not support HTML5 video.\r\n                    </video> */}\r\n            </td>\r\n        </tr>\r\n    ));\r\n}\r\n}\r\n\r\nexport default SideWidget;"]},"metadata":{},"sourceType":"module"}